//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PayNowReceiptsGeneration.CISAccountService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="COREInfoSoap", Namespace="http://CMS.org/CMS/CMSInfo")]
    public partial class COREInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetClientInfoImpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountMasterFSMSHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountDateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAddressDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientAddressDetailsArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientContactDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeContactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeRegulationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeLicensingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeCoursesTakenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeGuaranteeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCDRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeamSetUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountMasterWithServiceTypeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountMasterWithCDSAccNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountMasterWithAccTypeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountMasterInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountNoCloseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLDPInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountMasterUpdateFSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountMasterInsertOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegulationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMarketBrokerInsertUpdateDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalValuesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMarketBrokerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAeChannelHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientGiroEpsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientCpfSrsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientClearingAgentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountMasterInsertSBPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Webservice_DictionaryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public COREInfo() {
            this.Url = global::PayNowReceiptsGeneration.Properties.Settings.Default.Library_CISAccountService_COREInfo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetClientInfoImpCompletedEventHandler GetClientInfoImpCompleted;
        
        /// <remarks/>
        public event GetClientInfoCompletedEventHandler GetClientInfoCompleted;
        
        /// <remarks/>
        public event GetAccountMasterFSMSHistoryCompletedEventHandler GetAccountMasterFSMSHistoryCompleted;
        
        /// <remarks/>
        public event GetAccountDateInfoCompletedEventHandler GetAccountDateInfoCompleted;
        
        /// <remarks/>
        public event GetClientAddressDetailsCompletedEventHandler GetClientAddressDetailsCompleted;
        
        /// <remarks/>
        public event GetClientAddressDetailsArrayCompletedEventHandler GetClientAddressDetailsArrayCompleted;
        
        /// <remarks/>
        public event GetClientContactDetailsCompletedEventHandler GetClientContactDetailsCompleted;
        
        /// <remarks/>
        public event GetAeInfoCompletedEventHandler GetAeInfoCompleted;
        
        /// <remarks/>
        public event GetAeContactInfoCompletedEventHandler GetAeContactInfoCompleted;
        
        /// <remarks/>
        public event GetAeRegulationDetailsCompletedEventHandler GetAeRegulationDetailsCompleted;
        
        /// <remarks/>
        public event GetAeLicensingDetailsCompletedEventHandler GetAeLicensingDetailsCompleted;
        
        /// <remarks/>
        public event GetAeTeamCompletedEventHandler GetAeTeamCompleted;
        
        /// <remarks/>
        public event GetAeCoursesTakenCompletedEventHandler GetAeCoursesTakenCompleted;
        
        /// <remarks/>
        public event GetAeGuaranteeDetailsCompletedEventHandler GetAeGuaranteeDetailsCompleted;
        
        /// <remarks/>
        public event GetCDRefCompletedEventHandler GetCDRefCompleted;
        
        /// <remarks/>
        public event GetTeamSetUpCompletedEventHandler GetTeamSetUpCompleted;
        
        /// <remarks/>
        public event GetSecurityInfoCompletedEventHandler GetSecurityInfoCompleted;
        
        /// <remarks/>
        public event GetExchangeRateCompletedEventHandler GetExchangeRateCompleted;
        
        /// <remarks/>
        public event GetAccountMasterWithServiceTypeInfoCompletedEventHandler GetAccountMasterWithServiceTypeInfoCompleted;
        
        /// <remarks/>
        public event GetAccountMasterWithCDSAccNoCompletedEventHandler GetAccountMasterWithCDSAccNoCompleted;
        
        /// <remarks/>
        public event GetAccountMasterWithAccTypeInfoCompletedEventHandler GetAccountMasterWithAccTypeInfoCompleted;
        
        /// <remarks/>
        public event GetAccountMasterInfoCompletedEventHandler GetAccountMasterInfoCompleted;
        
        /// <remarks/>
        public event GetCalendarInfoCompletedEventHandler GetCalendarInfoCompleted;
        
        /// <remarks/>
        public event AccountNoCloseCompletedEventHandler AccountNoCloseCompleted;
        
        /// <remarks/>
        public event GetLDPInfoCompletedEventHandler GetLDPInfoCompleted;
        
        /// <remarks/>
        public event AccountMasterUpdateFSMSCompletedEventHandler AccountMasterUpdateFSMSCompleted;
        
        /// <remarks/>
        public event AccountMasterInsertOnlineCompletedEventHandler AccountMasterInsertOnlineCompleted;
        
        /// <remarks/>
        public event GetAccServiceTypeCompletedEventHandler GetAccServiceTypeCompleted;
        
        /// <remarks/>
        public event GetLoginInfoCompletedEventHandler GetLoginInfoCompleted;
        
        /// <remarks/>
        public event GetRegulationDetailsCompletedEventHandler GetRegulationDetailsCompleted;
        
        /// <remarks/>
        public event GetMarketBrokerInsertUpdateDeleteCompletedEventHandler GetMarketBrokerInsertUpdateDeleteCompleted;
        
        /// <remarks/>
        public event GetGlobalValuesInfoCompletedEventHandler GetGlobalValuesInfoCompleted;
        
        /// <remarks/>
        public event GetMarketBrokerInfoCompletedEventHandler GetMarketBrokerInfoCompleted;
        
        /// <remarks/>
        public event GetAeChannelHistoryCompletedEventHandler GetAeChannelHistoryCompleted;
        
        /// <remarks/>
        public event GetClientGiroEpsDetailsCompletedEventHandler GetClientGiroEpsDetailsCompleted;
        
        /// <remarks/>
        public event GetClientCpfSrsDetailsCompletedEventHandler GetClientCpfSrsDetailsCompleted;
        
        /// <remarks/>
        public event GetClientClearingAgentDetailsCompletedEventHandler GetClientClearingAgentDetailsCompleted;
        
        /// <remarks/>
        public event GetClientDetailsCompletedEventHandler GetClientDetailsCompleted;
        
        /// <remarks/>
        public event AccountMasterInsertSBPCompletedEventHandler AccountMasterInsertSBPCompleted;
        
        /// <remarks/>
        public event Webservice_DictionaryCompletedEventHandler Webservice_DictionaryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientInfoImp", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientInfoImp(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetClientInfoImp", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoImpAsync(string strSearchBy, string[] strSearchText) {
            this.GetClientInfoImpAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetClientInfoImpAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetClientInfoImpOperationCompleted == null)) {
                this.GetClientInfoImpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoImpOperationCompleted);
            }
            this.InvokeAsync("GetClientInfoImp", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetClientInfoImpOperationCompleted, userState);
        }
        
        private void OnGetClientInfoImpOperationCompleted(object arg) {
            if ((this.GetClientInfoImpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoImpCompleted(this, new GetClientInfoImpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientInfo(string strClientType, string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetClientInfo", new object[] {
                        strClientType,
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientInfoAsync(string strClientType, string strSearchBy, string[] strSearchText) {
            this.GetClientInfoAsync(strClientType, strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetClientInfoAsync(string strClientType, string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetClientInfoOperationCompleted == null)) {
                this.GetClientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientInfoOperationCompleted);
            }
            this.InvokeAsync("GetClientInfo", new object[] {
                        strClientType,
                        strSearchBy,
                        strSearchText}, this.GetClientInfoOperationCompleted, userState);
        }
        
        private void OnGetClientInfoOperationCompleted(object arg) {
            if ((this.GetClientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientInfoCompleted(this, new GetClientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccountMasterFSMSHistory", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountMasterFSMSHistory(int intMode, string[] SearchText) {
            object[] results = this.Invoke("GetAccountMasterFSMSHistory", new object[] {
                        intMode,
                        SearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountMasterFSMSHistoryAsync(int intMode, string[] SearchText) {
            this.GetAccountMasterFSMSHistoryAsync(intMode, SearchText, null);
        }
        
        /// <remarks/>
        public void GetAccountMasterFSMSHistoryAsync(int intMode, string[] SearchText, object userState) {
            if ((this.GetAccountMasterFSMSHistoryOperationCompleted == null)) {
                this.GetAccountMasterFSMSHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountMasterFSMSHistoryOperationCompleted);
            }
            this.InvokeAsync("GetAccountMasterFSMSHistory", new object[] {
                        intMode,
                        SearchText}, this.GetAccountMasterFSMSHistoryOperationCompleted, userState);
        }
        
        private void OnGetAccountMasterFSMSHistoryOperationCompleted(object arg) {
            if ((this.GetAccountMasterFSMSHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountMasterFSMSHistoryCompleted(this, new GetAccountMasterFSMSHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccountDateInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountDateInfo(int intMode, string appid, string[] AccNo) {
            object[] results = this.Invoke("GetAccountDateInfo", new object[] {
                        intMode,
                        appid,
                        AccNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDateInfoAsync(int intMode, string appid, string[] AccNo) {
            this.GetAccountDateInfoAsync(intMode, appid, AccNo, null);
        }
        
        /// <remarks/>
        public void GetAccountDateInfoAsync(int intMode, string appid, string[] AccNo, object userState) {
            if ((this.GetAccountDateInfoOperationCompleted == null)) {
                this.GetAccountDateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDateInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountDateInfo", new object[] {
                        intMode,
                        appid,
                        AccNo}, this.GetAccountDateInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountDateInfoOperationCompleted(object arg) {
            if ((this.GetAccountDateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDateInfoCompleted(this, new GetAccountDateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientAddressDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientAddressDetails(string strClientRefNo, string strAddressID, string strICNo) {
            object[] results = this.Invoke("GetClientAddressDetails", new object[] {
                        strClientRefNo,
                        strAddressID,
                        strICNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAddressDetailsAsync(string strClientRefNo, string strAddressID, string strICNo) {
            this.GetClientAddressDetailsAsync(strClientRefNo, strAddressID, strICNo, null);
        }
        
        /// <remarks/>
        public void GetClientAddressDetailsAsync(string strClientRefNo, string strAddressID, string strICNo, object userState) {
            if ((this.GetClientAddressDetailsOperationCompleted == null)) {
                this.GetClientAddressDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAddressDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientAddressDetails", new object[] {
                        strClientRefNo,
                        strAddressID,
                        strICNo}, this.GetClientAddressDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientAddressDetailsOperationCompleted(object arg) {
            if ((this.GetClientAddressDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAddressDetailsCompleted(this, new GetClientAddressDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientAddressDetailsArray", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientAddressDetailsArray(string[] strClientRefNo, string[] strAddressID, string[] strICNo) {
            object[] results = this.Invoke("GetClientAddressDetailsArray", new object[] {
                        strClientRefNo,
                        strAddressID,
                        strICNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAddressDetailsArrayAsync(string[] strClientRefNo, string[] strAddressID, string[] strICNo) {
            this.GetClientAddressDetailsArrayAsync(strClientRefNo, strAddressID, strICNo, null);
        }
        
        /// <remarks/>
        public void GetClientAddressDetailsArrayAsync(string[] strClientRefNo, string[] strAddressID, string[] strICNo, object userState) {
            if ((this.GetClientAddressDetailsArrayOperationCompleted == null)) {
                this.GetClientAddressDetailsArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientAddressDetailsArrayOperationCompleted);
            }
            this.InvokeAsync("GetClientAddressDetailsArray", new object[] {
                        strClientRefNo,
                        strAddressID,
                        strICNo}, this.GetClientAddressDetailsArrayOperationCompleted, userState);
        }
        
        private void OnGetClientAddressDetailsArrayOperationCompleted(object arg) {
            if ((this.GetClientAddressDetailsArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientAddressDetailsArrayCompleted(this, new GetClientAddressDetailsArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientContactDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientContactDetails(string strClientRefNo, string strClientICNo, string strAddressID, string strLineID) {
            object[] results = this.Invoke("GetClientContactDetails", new object[] {
                        strClientRefNo,
                        strClientICNo,
                        strAddressID,
                        strLineID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientContactDetailsAsync(string strClientRefNo, string strClientICNo, string strAddressID, string strLineID) {
            this.GetClientContactDetailsAsync(strClientRefNo, strClientICNo, strAddressID, strLineID, null);
        }
        
        /// <remarks/>
        public void GetClientContactDetailsAsync(string strClientRefNo, string strClientICNo, string strAddressID, string strLineID, object userState) {
            if ((this.GetClientContactDetailsOperationCompleted == null)) {
                this.GetClientContactDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientContactDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientContactDetails", new object[] {
                        strClientRefNo,
                        strClientICNo,
                        strAddressID,
                        strLineID}, this.GetClientContactDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientContactDetailsOperationCompleted(object arg) {
            if ((this.GetClientContactDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientContactDetailsCompleted(this, new GetClientContactDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeInfo(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAeInfo", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeInfoAsync(string strSearchBy, string[] strSearchText) {
            this.GetAeInfoAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAeInfoAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAeInfoOperationCompleted == null)) {
                this.GetAeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeInfoOperationCompleted);
            }
            this.InvokeAsync("GetAeInfo", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetAeInfoOperationCompleted, userState);
        }
        
        private void OnGetAeInfoOperationCompleted(object arg) {
            if ((this.GetAeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeInfoCompleted(this, new GetAeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeContactInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeContactInfo(string strAeRefNo, string strAeID, string strLineID, string strAeContactType) {
            object[] results = this.Invoke("GetAeContactInfo", new object[] {
                        strAeRefNo,
                        strAeID,
                        strLineID,
                        strAeContactType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeContactInfoAsync(string strAeRefNo, string strAeID, string strLineID, string strAeContactType) {
            this.GetAeContactInfoAsync(strAeRefNo, strAeID, strLineID, strAeContactType, null);
        }
        
        /// <remarks/>
        public void GetAeContactInfoAsync(string strAeRefNo, string strAeID, string strLineID, string strAeContactType, object userState) {
            if ((this.GetAeContactInfoOperationCompleted == null)) {
                this.GetAeContactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeContactInfoOperationCompleted);
            }
            this.InvokeAsync("GetAeContactInfo", new object[] {
                        strAeRefNo,
                        strAeID,
                        strLineID,
                        strAeContactType}, this.GetAeContactInfoOperationCompleted, userState);
        }
        
        private void OnGetAeContactInfoOperationCompleted(object arg) {
            if ((this.GetAeContactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeContactInfoCompleted(this, new GetAeContactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeRegulationDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeRegulationDetails(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAeRegulationDetails", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeRegulationDetailsAsync(string strSearchBy, string[] strSearchText) {
            this.GetAeRegulationDetailsAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAeRegulationDetailsAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAeRegulationDetailsOperationCompleted == null)) {
                this.GetAeRegulationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeRegulationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAeRegulationDetails", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetAeRegulationDetailsOperationCompleted, userState);
        }
        
        private void OnGetAeRegulationDetailsOperationCompleted(object arg) {
            if ((this.GetAeRegulationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeRegulationDetailsCompleted(this, new GetAeRegulationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeLicensingDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeLicensingDetails(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAeLicensingDetails", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeLicensingDetailsAsync(string strSearchBy, string[] strSearchText) {
            this.GetAeLicensingDetailsAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAeLicensingDetailsAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAeLicensingDetailsOperationCompleted == null)) {
                this.GetAeLicensingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeLicensingDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAeLicensingDetails", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetAeLicensingDetailsOperationCompleted, userState);
        }
        
        private void OnGetAeLicensingDetailsOperationCompleted(object arg) {
            if ((this.GetAeLicensingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeLicensingDetailsCompleted(this, new GetAeLicensingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeTeam", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeTeam(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAeTeam", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeTeamAsync(string strSearchBy, string[] strSearchText) {
            this.GetAeTeamAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAeTeamAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAeTeamOperationCompleted == null)) {
                this.GetAeTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeTeamOperationCompleted);
            }
            this.InvokeAsync("GetAeTeam", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetAeTeamOperationCompleted, userState);
        }
        
        private void OnGetAeTeamOperationCompleted(object arg) {
            if ((this.GetAeTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeTeamCompleted(this, new GetAeTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeCoursesTaken", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeCoursesTaken(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAeCoursesTaken", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeCoursesTakenAsync(string strSearchBy, string[] strSearchText) {
            this.GetAeCoursesTakenAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAeCoursesTakenAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAeCoursesTakenOperationCompleted == null)) {
                this.GetAeCoursesTakenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeCoursesTakenOperationCompleted);
            }
            this.InvokeAsync("GetAeCoursesTaken", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetAeCoursesTakenOperationCompleted, userState);
        }
        
        private void OnGetAeCoursesTakenOperationCompleted(object arg) {
            if ((this.GetAeCoursesTakenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeCoursesTakenCompleted(this, new GetAeCoursesTakenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeGuaranteeDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeGuaranteeDetails(string SearchName, string[] SearchValue, string GuaranteeType) {
            object[] results = this.Invoke("GetAeGuaranteeDetails", new object[] {
                        SearchName,
                        SearchValue,
                        GuaranteeType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeGuaranteeDetailsAsync(string SearchName, string[] SearchValue, string GuaranteeType) {
            this.GetAeGuaranteeDetailsAsync(SearchName, SearchValue, GuaranteeType, null);
        }
        
        /// <remarks/>
        public void GetAeGuaranteeDetailsAsync(string SearchName, string[] SearchValue, string GuaranteeType, object userState) {
            if ((this.GetAeGuaranteeDetailsOperationCompleted == null)) {
                this.GetAeGuaranteeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeGuaranteeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAeGuaranteeDetails", new object[] {
                        SearchName,
                        SearchValue,
                        GuaranteeType}, this.GetAeGuaranteeDetailsOperationCompleted, userState);
        }
        
        private void OnGetAeGuaranteeDetailsOperationCompleted(object arg) {
            if ((this.GetAeGuaranteeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeGuaranteeDetailsCompleted(this, new GetAeGuaranteeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetCDRef", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCDRef(string CdType, string Source) {
            object[] results = this.Invoke("GetCDRef", new object[] {
                        CdType,
                        Source});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCDRefAsync(string CdType, string Source) {
            this.GetCDRefAsync(CdType, Source, null);
        }
        
        /// <remarks/>
        public void GetCDRefAsync(string CdType, string Source, object userState) {
            if ((this.GetCDRefOperationCompleted == null)) {
                this.GetCDRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCDRefOperationCompleted);
            }
            this.InvokeAsync("GetCDRef", new object[] {
                        CdType,
                        Source}, this.GetCDRefOperationCompleted, userState);
        }
        
        private void OnGetCDRefOperationCompleted(object arg) {
            if ((this.GetCDRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCDRefCompleted(this, new GetCDRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetTeamSetUp", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTeamSetUp(string DrGroupCd, string GroupType) {
            object[] results = this.Invoke("GetTeamSetUp", new object[] {
                        DrGroupCd,
                        GroupType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeamSetUpAsync(string DrGroupCd, string GroupType) {
            this.GetTeamSetUpAsync(DrGroupCd, GroupType, null);
        }
        
        /// <remarks/>
        public void GetTeamSetUpAsync(string DrGroupCd, string GroupType, object userState) {
            if ((this.GetTeamSetUpOperationCompleted == null)) {
                this.GetTeamSetUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeamSetUpOperationCompleted);
            }
            this.InvokeAsync("GetTeamSetUp", new object[] {
                        DrGroupCd,
                        GroupType}, this.GetTeamSetUpOperationCompleted, userState);
        }
        
        private void OnGetTeamSetUpOperationCompleted(object arg) {
            if ((this.GetTeamSetUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeamSetUpCompleted(this, new GetTeamSetUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetSecurityInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSecurityInfo(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetSecurityInfo", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityInfoAsync(string strSearchBy, string[] strSearchText) {
            this.GetSecurityInfoAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetSecurityInfoAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetSecurityInfoOperationCompleted == null)) {
                this.GetSecurityInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityInfoOperationCompleted);
            }
            this.InvokeAsync("GetSecurityInfo", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetSecurityInfoOperationCompleted, userState);
        }
        
        private void OnGetSecurityInfoOperationCompleted(object arg) {
            if ((this.GetSecurityInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityInfoCompleted(this, new GetSecurityInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetExchangeRate", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExchangeRate(short intMode, string[] strBaseCurr, string[] StrOtherCurr) {
            object[] results = this.Invoke("GetExchangeRate", new object[] {
                        intMode,
                        strBaseCurr,
                        StrOtherCurr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRateAsync(short intMode, string[] strBaseCurr, string[] StrOtherCurr) {
            this.GetExchangeRateAsync(intMode, strBaseCurr, StrOtherCurr, null);
        }
        
        /// <remarks/>
        public void GetExchangeRateAsync(short intMode, string[] strBaseCurr, string[] StrOtherCurr, object userState) {
            if ((this.GetExchangeRateOperationCompleted == null)) {
                this.GetExchangeRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRateOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRate", new object[] {
                        intMode,
                        strBaseCurr,
                        StrOtherCurr}, this.GetExchangeRateOperationCompleted, userState);
        }
        
        private void OnGetExchangeRateOperationCompleted(object arg) {
            if ((this.GetExchangeRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRateCompleted(this, new GetExchangeRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccountMasterWithServiceTypeInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountMasterWithServiceTypeInfo(short intMode, string[] strAccNo, string[] AccServiceType, string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAccountMasterWithServiceTypeInfo", new object[] {
                        intMode,
                        strAccNo,
                        AccServiceType,
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountMasterWithServiceTypeInfoAsync(short intMode, string[] strAccNo, string[] AccServiceType, string strSearchBy, string[] strSearchText) {
            this.GetAccountMasterWithServiceTypeInfoAsync(intMode, strAccNo, AccServiceType, strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAccountMasterWithServiceTypeInfoAsync(short intMode, string[] strAccNo, string[] AccServiceType, string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAccountMasterWithServiceTypeInfoOperationCompleted == null)) {
                this.GetAccountMasterWithServiceTypeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountMasterWithServiceTypeInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountMasterWithServiceTypeInfo", new object[] {
                        intMode,
                        strAccNo,
                        AccServiceType,
                        strSearchBy,
                        strSearchText}, this.GetAccountMasterWithServiceTypeInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountMasterWithServiceTypeInfoOperationCompleted(object arg) {
            if ((this.GetAccountMasterWithServiceTypeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountMasterWithServiceTypeInfoCompleted(this, new GetAccountMasterWithServiceTypeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccountMasterWithCDSAccNo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountMasterWithCDSAccNo(short intMode, string[] strAccNo, string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAccountMasterWithCDSAccNo", new object[] {
                        intMode,
                        strAccNo,
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountMasterWithCDSAccNoAsync(short intMode, string[] strAccNo, string strSearchBy, string[] strSearchText) {
            this.GetAccountMasterWithCDSAccNoAsync(intMode, strAccNo, strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAccountMasterWithCDSAccNoAsync(short intMode, string[] strAccNo, string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAccountMasterWithCDSAccNoOperationCompleted == null)) {
                this.GetAccountMasterWithCDSAccNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountMasterWithCDSAccNoOperationCompleted);
            }
            this.InvokeAsync("GetAccountMasterWithCDSAccNo", new object[] {
                        intMode,
                        strAccNo,
                        strSearchBy,
                        strSearchText}, this.GetAccountMasterWithCDSAccNoOperationCompleted, userState);
        }
        
        private void OnGetAccountMasterWithCDSAccNoOperationCompleted(object arg) {
            if ((this.GetAccountMasterWithCDSAccNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountMasterWithCDSAccNoCompleted(this, new GetAccountMasterWithCDSAccNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccountMasterWithAccTypeInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountMasterWithAccTypeInfo(short intMode, string[] strAccNo, string[] strAccType, string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetAccountMasterWithAccTypeInfo", new object[] {
                        intMode,
                        strAccNo,
                        strAccType,
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountMasterWithAccTypeInfoAsync(short intMode, string[] strAccNo, string[] strAccType, string strSearchBy, string[] strSearchText) {
            this.GetAccountMasterWithAccTypeInfoAsync(intMode, strAccNo, strAccType, strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAccountMasterWithAccTypeInfoAsync(short intMode, string[] strAccNo, string[] strAccType, string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetAccountMasterWithAccTypeInfoOperationCompleted == null)) {
                this.GetAccountMasterWithAccTypeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountMasterWithAccTypeInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountMasterWithAccTypeInfo", new object[] {
                        intMode,
                        strAccNo,
                        strAccType,
                        strSearchBy,
                        strSearchText}, this.GetAccountMasterWithAccTypeInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountMasterWithAccTypeInfoOperationCompleted(object arg) {
            if ((this.GetAccountMasterWithAccTypeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountMasterWithAccTypeInfoCompleted(this, new GetAccountMasterWithAccTypeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccountMasterInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountMasterInfo(short intMode, string strSearchBy, string[] strAccNo, string[] strSearchText) {
            object[] results = this.Invoke("GetAccountMasterInfo", new object[] {
                        intMode,
                        strSearchBy,
                        strAccNo,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountMasterInfoAsync(short intMode, string strSearchBy, string[] strAccNo, string[] strSearchText) {
            this.GetAccountMasterInfoAsync(intMode, strSearchBy, strAccNo, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetAccountMasterInfoAsync(short intMode, string strSearchBy, string[] strAccNo, string[] strSearchText, object userState) {
            if ((this.GetAccountMasterInfoOperationCompleted == null)) {
                this.GetAccountMasterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountMasterInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountMasterInfo", new object[] {
                        intMode,
                        strSearchBy,
                        strAccNo,
                        strSearchText}, this.GetAccountMasterInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountMasterInfoOperationCompleted(object arg) {
            if ((this.GetAccountMasterInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountMasterInfoCompleted(this, new GetAccountMasterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetCalendarInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCalendarInfo(short intMode, string[] StrMktCd, string[] strGetDate, string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetCalendarInfo", new object[] {
                        intMode,
                        StrMktCd,
                        strGetDate,
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCalendarInfoAsync(short intMode, string[] StrMktCd, string[] strGetDate, string strSearchBy, string[] strSearchText) {
            this.GetCalendarInfoAsync(intMode, StrMktCd, strGetDate, strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetCalendarInfoAsync(short intMode, string[] StrMktCd, string[] strGetDate, string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetCalendarInfoOperationCompleted == null)) {
                this.GetCalendarInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarInfoOperationCompleted);
            }
            this.InvokeAsync("GetCalendarInfo", new object[] {
                        intMode,
                        StrMktCd,
                        strGetDate,
                        strSearchBy,
                        strSearchText}, this.GetCalendarInfoOperationCompleted, userState);
        }
        
        private void OnGetCalendarInfoOperationCompleted(object arg) {
            if ((this.GetCalendarInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarInfoCompleted(this, new GetCalendarInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/AccountNoClose", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountNoClose(string strAccNo, string strAccSerType, string strStatusInd, string strStatusBy, string StrReason) {
            object[] results = this.Invoke("AccountNoClose", new object[] {
                        strAccNo,
                        strAccSerType,
                        strStatusInd,
                        strStatusBy,
                        StrReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountNoCloseAsync(string strAccNo, string strAccSerType, string strStatusInd, string strStatusBy, string StrReason) {
            this.AccountNoCloseAsync(strAccNo, strAccSerType, strStatusInd, strStatusBy, StrReason, null);
        }
        
        /// <remarks/>
        public void AccountNoCloseAsync(string strAccNo, string strAccSerType, string strStatusInd, string strStatusBy, string StrReason, object userState) {
            if ((this.AccountNoCloseOperationCompleted == null)) {
                this.AccountNoCloseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountNoCloseOperationCompleted);
            }
            this.InvokeAsync("AccountNoClose", new object[] {
                        strAccNo,
                        strAccSerType,
                        strStatusInd,
                        strStatusBy,
                        StrReason}, this.AccountNoCloseOperationCompleted, userState);
        }
        
        private void OnAccountNoCloseOperationCompleted(object arg) {
            if ((this.AccountNoCloseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountNoCloseCompleted(this, new AccountNoCloseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetLDPInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLDPInfo(short intMode, string[] SecCd, string FromDate, string ToDate) {
            object[] results = this.Invoke("GetLDPInfo", new object[] {
                        intMode,
                        SecCd,
                        FromDate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLDPInfoAsync(short intMode, string[] SecCd, string FromDate, string ToDate) {
            this.GetLDPInfoAsync(intMode, SecCd, FromDate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetLDPInfoAsync(short intMode, string[] SecCd, string FromDate, string ToDate, object userState) {
            if ((this.GetLDPInfoOperationCompleted == null)) {
                this.GetLDPInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLDPInfoOperationCompleted);
            }
            this.InvokeAsync("GetLDPInfo", new object[] {
                        intMode,
                        SecCd,
                        FromDate,
                        ToDate}, this.GetLDPInfoOperationCompleted, userState);
        }
        
        private void OnGetLDPInfoOperationCompleted(object arg) {
            if ((this.GetLDPInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLDPInfoCompleted(this, new GetLDPInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/AccountMasterUpdateFSMS", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountMasterUpdateFSMS(int intMode, string strAccNo, string strAccSerType, string strW8BenSerialNo, string StrW8SubDate, string StrW8SuspendDate, string strCDSAccNo, string StrCDSCreatedDate, string StrKlseAccNo, string strKlseBrokNameCd, string strOTCSerialNo, string StrOTCSubDate, string ModifiedBy) {
            object[] results = this.Invoke("AccountMasterUpdateFSMS", new object[] {
                        intMode,
                        strAccNo,
                        strAccSerType,
                        strW8BenSerialNo,
                        StrW8SubDate,
                        StrW8SuspendDate,
                        strCDSAccNo,
                        StrCDSCreatedDate,
                        StrKlseAccNo,
                        strKlseBrokNameCd,
                        strOTCSerialNo,
                        StrOTCSubDate,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountMasterUpdateFSMSAsync(int intMode, string strAccNo, string strAccSerType, string strW8BenSerialNo, string StrW8SubDate, string StrW8SuspendDate, string strCDSAccNo, string StrCDSCreatedDate, string StrKlseAccNo, string strKlseBrokNameCd, string strOTCSerialNo, string StrOTCSubDate, string ModifiedBy) {
            this.AccountMasterUpdateFSMSAsync(intMode, strAccNo, strAccSerType, strW8BenSerialNo, StrW8SubDate, StrW8SuspendDate, strCDSAccNo, StrCDSCreatedDate, StrKlseAccNo, strKlseBrokNameCd, strOTCSerialNo, StrOTCSubDate, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AccountMasterUpdateFSMSAsync(int intMode, string strAccNo, string strAccSerType, string strW8BenSerialNo, string StrW8SubDate, string StrW8SuspendDate, string strCDSAccNo, string StrCDSCreatedDate, string StrKlseAccNo, string strKlseBrokNameCd, string strOTCSerialNo, string StrOTCSubDate, string ModifiedBy, object userState) {
            if ((this.AccountMasterUpdateFSMSOperationCompleted == null)) {
                this.AccountMasterUpdateFSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountMasterUpdateFSMSOperationCompleted);
            }
            this.InvokeAsync("AccountMasterUpdateFSMS", new object[] {
                        intMode,
                        strAccNo,
                        strAccSerType,
                        strW8BenSerialNo,
                        StrW8SubDate,
                        StrW8SuspendDate,
                        strCDSAccNo,
                        StrCDSCreatedDate,
                        StrKlseAccNo,
                        strKlseBrokNameCd,
                        strOTCSerialNo,
                        StrOTCSubDate,
                        ModifiedBy}, this.AccountMasterUpdateFSMSOperationCompleted, userState);
        }
        
        private void OnAccountMasterUpdateFSMSOperationCompleted(object arg) {
            if ((this.AccountMasterUpdateFSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountMasterUpdateFSMSCompleted(this, new AccountMasterUpdateFSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/AccountMasterInsertOnline", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountMasterInsertOnline(string strSytemMode, string strAccNo, string strCreatedBy) {
            object[] results = this.Invoke("AccountMasterInsertOnline", new object[] {
                        strSytemMode,
                        strAccNo,
                        strCreatedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountMasterInsertOnlineAsync(string strSytemMode, string strAccNo, string strCreatedBy) {
            this.AccountMasterInsertOnlineAsync(strSytemMode, strAccNo, strCreatedBy, null);
        }
        
        /// <remarks/>
        public void AccountMasterInsertOnlineAsync(string strSytemMode, string strAccNo, string strCreatedBy, object userState) {
            if ((this.AccountMasterInsertOnlineOperationCompleted == null)) {
                this.AccountMasterInsertOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountMasterInsertOnlineOperationCompleted);
            }
            this.InvokeAsync("AccountMasterInsertOnline", new object[] {
                        strSytemMode,
                        strAccNo,
                        strCreatedBy}, this.AccountMasterInsertOnlineOperationCompleted, userState);
        }
        
        private void OnAccountMasterInsertOnlineOperationCompleted(object arg) {
            if ((this.AccountMasterInsertOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountMasterInsertOnlineCompleted(this, new AccountMasterInsertOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAccServiceType", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccServiceType(string strSpelCd) {
            object[] results = this.Invoke("GetAccServiceType", new object[] {
                        strSpelCd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccServiceTypeAsync(string strSpelCd) {
            this.GetAccServiceTypeAsync(strSpelCd, null);
        }
        
        /// <remarks/>
        public void GetAccServiceTypeAsync(string strSpelCd, object userState) {
            if ((this.GetAccServiceTypeOperationCompleted == null)) {
                this.GetAccServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAccServiceType", new object[] {
                        strSpelCd}, this.GetAccServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAccServiceTypeOperationCompleted(object arg) {
            if ((this.GetAccServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccServiceTypeCompleted(this, new GetAccServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetLoginInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLoginInfo(int intMode, string strAppId, string strUserId, string strGroupId) {
            object[] results = this.Invoke("GetLoginInfo", new object[] {
                        intMode,
                        strAppId,
                        strUserId,
                        strGroupId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginInfoAsync(int intMode, string strAppId, string strUserId, string strGroupId) {
            this.GetLoginInfoAsync(intMode, strAppId, strUserId, strGroupId, null);
        }
        
        /// <remarks/>
        public void GetLoginInfoAsync(int intMode, string strAppId, string strUserId, string strGroupId, object userState) {
            if ((this.GetLoginInfoOperationCompleted == null)) {
                this.GetLoginInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginInfoOperationCompleted);
            }
            this.InvokeAsync("GetLoginInfo", new object[] {
                        intMode,
                        strAppId,
                        strUserId,
                        strGroupId}, this.GetLoginInfoOperationCompleted, userState);
        }
        
        private void OnGetLoginInfoOperationCompleted(object arg) {
            if ((this.GetLoginInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginInfoCompleted(this, new GetLoginInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetRegulationDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegulationDetails(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetRegulationDetails", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegulationDetailsAsync(string strSearchBy, string[] strSearchText) {
            this.GetRegulationDetailsAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetRegulationDetailsAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetRegulationDetailsOperationCompleted == null)) {
                this.GetRegulationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegulationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRegulationDetails", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetRegulationDetailsOperationCompleted, userState);
        }
        
        private void OnGetRegulationDetailsOperationCompleted(object arg) {
            if ((this.GetRegulationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegulationDetailsCompleted(this, new GetRegulationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetMarketBrokerInsertUpdateDelete", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMarketBrokerInsertUpdateDelete(string MarketCd, string AccNo, string AccServiceType, string ForeignBrokCd, string DefaultInd, string Mode, string Ad_Mode, string CreatedBy) {
            object[] results = this.Invoke("GetMarketBrokerInsertUpdateDelete", new object[] {
                        MarketCd,
                        AccNo,
                        AccServiceType,
                        ForeignBrokCd,
                        DefaultInd,
                        Mode,
                        Ad_Mode,
                        CreatedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMarketBrokerInsertUpdateDeleteAsync(string MarketCd, string AccNo, string AccServiceType, string ForeignBrokCd, string DefaultInd, string Mode, string Ad_Mode, string CreatedBy) {
            this.GetMarketBrokerInsertUpdateDeleteAsync(MarketCd, AccNo, AccServiceType, ForeignBrokCd, DefaultInd, Mode, Ad_Mode, CreatedBy, null);
        }
        
        /// <remarks/>
        public void GetMarketBrokerInsertUpdateDeleteAsync(string MarketCd, string AccNo, string AccServiceType, string ForeignBrokCd, string DefaultInd, string Mode, string Ad_Mode, string CreatedBy, object userState) {
            if ((this.GetMarketBrokerInsertUpdateDeleteOperationCompleted == null)) {
                this.GetMarketBrokerInsertUpdateDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarketBrokerInsertUpdateDeleteOperationCompleted);
            }
            this.InvokeAsync("GetMarketBrokerInsertUpdateDelete", new object[] {
                        MarketCd,
                        AccNo,
                        AccServiceType,
                        ForeignBrokCd,
                        DefaultInd,
                        Mode,
                        Ad_Mode,
                        CreatedBy}, this.GetMarketBrokerInsertUpdateDeleteOperationCompleted, userState);
        }
        
        private void OnGetMarketBrokerInsertUpdateDeleteOperationCompleted(object arg) {
            if ((this.GetMarketBrokerInsertUpdateDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarketBrokerInsertUpdateDeleteCompleted(this, new GetMarketBrokerInsertUpdateDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetGlobalValuesInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGlobalValuesInfo(int setMode, string setRecType) {
            object[] results = this.Invoke("GetGlobalValuesInfo", new object[] {
                        setMode,
                        setRecType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalValuesInfoAsync(int setMode, string setRecType) {
            this.GetGlobalValuesInfoAsync(setMode, setRecType, null);
        }
        
        /// <remarks/>
        public void GetGlobalValuesInfoAsync(int setMode, string setRecType, object userState) {
            if ((this.GetGlobalValuesInfoOperationCompleted == null)) {
                this.GetGlobalValuesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalValuesInfoOperationCompleted);
            }
            this.InvokeAsync("GetGlobalValuesInfo", new object[] {
                        setMode,
                        setRecType}, this.GetGlobalValuesInfoOperationCompleted, userState);
        }
        
        private void OnGetGlobalValuesInfoOperationCompleted(object arg) {
            if ((this.GetGlobalValuesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalValuesInfoCompleted(this, new GetGlobalValuesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetMarketBrokerInfo", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMarketBrokerInfo(string strSearchBy, string[] strSearchText) {
            object[] results = this.Invoke("GetMarketBrokerInfo", new object[] {
                        strSearchBy,
                        strSearchText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMarketBrokerInfoAsync(string strSearchBy, string[] strSearchText) {
            this.GetMarketBrokerInfoAsync(strSearchBy, strSearchText, null);
        }
        
        /// <remarks/>
        public void GetMarketBrokerInfoAsync(string strSearchBy, string[] strSearchText, object userState) {
            if ((this.GetMarketBrokerInfoOperationCompleted == null)) {
                this.GetMarketBrokerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMarketBrokerInfoOperationCompleted);
            }
            this.InvokeAsync("GetMarketBrokerInfo", new object[] {
                        strSearchBy,
                        strSearchText}, this.GetMarketBrokerInfoOperationCompleted, userState);
        }
        
        private void OnGetMarketBrokerInfoOperationCompleted(object arg) {
            if ((this.GetMarketBrokerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMarketBrokerInfoCompleted(this, new GetMarketBrokerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetAeChannelHistory", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAeChannelHistory(int intMode, string strAeRefNo, string strCreatedDate) {
            object[] results = this.Invoke("GetAeChannelHistory", new object[] {
                        intMode,
                        strAeRefNo,
                        strCreatedDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAeChannelHistoryAsync(int intMode, string strAeRefNo, string strCreatedDate) {
            this.GetAeChannelHistoryAsync(intMode, strAeRefNo, strCreatedDate, null);
        }
        
        /// <remarks/>
        public void GetAeChannelHistoryAsync(int intMode, string strAeRefNo, string strCreatedDate, object userState) {
            if ((this.GetAeChannelHistoryOperationCompleted == null)) {
                this.GetAeChannelHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAeChannelHistoryOperationCompleted);
            }
            this.InvokeAsync("GetAeChannelHistory", new object[] {
                        intMode,
                        strAeRefNo,
                        strCreatedDate}, this.GetAeChannelHistoryOperationCompleted, userState);
        }
        
        private void OnGetAeChannelHistoryOperationCompleted(object arg) {
            if ((this.GetAeChannelHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAeChannelHistoryCompleted(this, new GetAeChannelHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientGiroEpsDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientGiroEpsDetails(int intMode, string[] strClientRefNo, string[] strServiceType, short[] intLineId) {
            object[] results = this.Invoke("GetClientGiroEpsDetails", new object[] {
                        intMode,
                        strClientRefNo,
                        strServiceType,
                        intLineId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientGiroEpsDetailsAsync(int intMode, string[] strClientRefNo, string[] strServiceType, short[] intLineId) {
            this.GetClientGiroEpsDetailsAsync(intMode, strClientRefNo, strServiceType, intLineId, null);
        }
        
        /// <remarks/>
        public void GetClientGiroEpsDetailsAsync(int intMode, string[] strClientRefNo, string[] strServiceType, short[] intLineId, object userState) {
            if ((this.GetClientGiroEpsDetailsOperationCompleted == null)) {
                this.GetClientGiroEpsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientGiroEpsDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientGiroEpsDetails", new object[] {
                        intMode,
                        strClientRefNo,
                        strServiceType,
                        intLineId}, this.GetClientGiroEpsDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientGiroEpsDetailsOperationCompleted(object arg) {
            if ((this.GetClientGiroEpsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientGiroEpsDetailsCompleted(this, new GetClientGiroEpsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientCpfSrsDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientCpfSrsDetails(int intMode, string[] strClientRefNo, string[] strServiceType, short[] intLineId, string[] strAccType) {
            object[] results = this.Invoke("GetClientCpfSrsDetails", new object[] {
                        intMode,
                        strClientRefNo,
                        strServiceType,
                        intLineId,
                        strAccType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientCpfSrsDetailsAsync(int intMode, string[] strClientRefNo, string[] strServiceType, short[] intLineId, string[] strAccType) {
            this.GetClientCpfSrsDetailsAsync(intMode, strClientRefNo, strServiceType, intLineId, strAccType, null);
        }
        
        /// <remarks/>
        public void GetClientCpfSrsDetailsAsync(int intMode, string[] strClientRefNo, string[] strServiceType, short[] intLineId, string[] strAccType, object userState) {
            if ((this.GetClientCpfSrsDetailsOperationCompleted == null)) {
                this.GetClientCpfSrsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientCpfSrsDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientCpfSrsDetails", new object[] {
                        intMode,
                        strClientRefNo,
                        strServiceType,
                        intLineId,
                        strAccType}, this.GetClientCpfSrsDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientCpfSrsDetailsOperationCompleted(object arg) {
            if ((this.GetClientCpfSrsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientCpfSrsDetailsCompleted(this, new GetClientCpfSrsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientClearingAgentDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientClearingAgentDetails(int intMode, string[] strClientRefNo, string[] strClearingAgentCd) {
            object[] results = this.Invoke("GetClientClearingAgentDetails", new object[] {
                        intMode,
                        strClientRefNo,
                        strClearingAgentCd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientClearingAgentDetailsAsync(int intMode, string[] strClientRefNo, string[] strClearingAgentCd) {
            this.GetClientClearingAgentDetailsAsync(intMode, strClientRefNo, strClearingAgentCd, null);
        }
        
        /// <remarks/>
        public void GetClientClearingAgentDetailsAsync(int intMode, string[] strClientRefNo, string[] strClearingAgentCd, object userState) {
            if ((this.GetClientClearingAgentDetailsOperationCompleted == null)) {
                this.GetClientClearingAgentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientClearingAgentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientClearingAgentDetails", new object[] {
                        intMode,
                        strClientRefNo,
                        strClearingAgentCd}, this.GetClientClearingAgentDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientClearingAgentDetailsOperationCompleted(object arg) {
            if ((this.GetClientClearingAgentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientClearingAgentDetailsCompleted(this, new GetClientClearingAgentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/GetClientDetails", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientDetails(int intMode, string[] AccNo) {
            object[] results = this.Invoke("GetClientDetails", new object[] {
                        intMode,
                        AccNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientDetailsAsync(int intMode, string[] AccNo) {
            this.GetClientDetailsAsync(intMode, AccNo, null);
        }
        
        /// <remarks/>
        public void GetClientDetailsAsync(int intMode, string[] AccNo, object userState) {
            if ((this.GetClientDetailsOperationCompleted == null)) {
                this.GetClientDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientDetailsOperationCompleted);
            }
            this.InvokeAsync("GetClientDetails", new object[] {
                        intMode,
                        AccNo}, this.GetClientDetailsOperationCompleted, userState);
        }
        
        private void OnGetClientDetailsOperationCompleted(object arg) {
            if ((this.GetClientDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientDetailsCompleted(this, new GetClientDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/AccountMasterInsertSBP", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AccountMasterInsertSBP(string AccNo, string AccServiceType) {
            object[] results = this.Invoke("AccountMasterInsertSBP", new object[] {
                        AccNo,
                        AccServiceType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountMasterInsertSBPAsync(string AccNo, string AccServiceType) {
            this.AccountMasterInsertSBPAsync(AccNo, AccServiceType, null);
        }
        
        /// <remarks/>
        public void AccountMasterInsertSBPAsync(string AccNo, string AccServiceType, object userState) {
            if ((this.AccountMasterInsertSBPOperationCompleted == null)) {
                this.AccountMasterInsertSBPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountMasterInsertSBPOperationCompleted);
            }
            this.InvokeAsync("AccountMasterInsertSBP", new object[] {
                        AccNo,
                        AccServiceType}, this.AccountMasterInsertSBPOperationCompleted, userState);
        }
        
        private void OnAccountMasterInsertSBPOperationCompleted(object arg) {
            if ((this.AccountMasterInsertSBPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountMasterInsertSBPCompleted(this, new AccountMasterInsertSBPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CMS.org/CMS/CMSInfo/Webservice_Dictionary", RequestNamespace="http://CMS.org/CMS/CMSInfo", ResponseNamespace="http://CMS.org/CMS/CMSInfo", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Webservice_Dictionary() {
            object[] results = this.Invoke("Webservice_Dictionary", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Webservice_DictionaryAsync() {
            this.Webservice_DictionaryAsync(null);
        }
        
        /// <remarks/>
        public void Webservice_DictionaryAsync(object userState) {
            if ((this.Webservice_DictionaryOperationCompleted == null)) {
                this.Webservice_DictionaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebservice_DictionaryOperationCompleted);
            }
            this.InvokeAsync("Webservice_Dictionary", new object[0], this.Webservice_DictionaryOperationCompleted, userState);
        }
        
        private void OnWebservice_DictionaryOperationCompleted(object arg) {
            if ((this.Webservice_DictionaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Webservice_DictionaryCompleted(this, new Webservice_DictionaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CMS.org/CMS/CMSInfo")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://CMS.org/CMS/CMSInfo", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private object userNameField;
        
        private object passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public object UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public object Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientInfoImpCompletedEventHandler(object sender, GetClientInfoImpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoImpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoImpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientInfoCompletedEventHandler(object sender, GetClientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountMasterFSMSHistoryCompletedEventHandler(object sender, GetAccountMasterFSMSHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountMasterFSMSHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountMasterFSMSHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountDateInfoCompletedEventHandler(object sender, GetAccountDateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientAddressDetailsCompletedEventHandler(object sender, GetClientAddressDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAddressDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAddressDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientAddressDetailsArrayCompletedEventHandler(object sender, GetClientAddressDetailsArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientAddressDetailsArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientAddressDetailsArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientContactDetailsCompletedEventHandler(object sender, GetClientContactDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientContactDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientContactDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeInfoCompletedEventHandler(object sender, GetAeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeContactInfoCompletedEventHandler(object sender, GetAeContactInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeRegulationDetailsCompletedEventHandler(object sender, GetAeRegulationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeRegulationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeRegulationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeLicensingDetailsCompletedEventHandler(object sender, GetAeLicensingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeLicensingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeLicensingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeTeamCompletedEventHandler(object sender, GetAeTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeCoursesTakenCompletedEventHandler(object sender, GetAeCoursesTakenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeCoursesTakenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeCoursesTakenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeGuaranteeDetailsCompletedEventHandler(object sender, GetAeGuaranteeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeGuaranteeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeGuaranteeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCDRefCompletedEventHandler(object sender, GetCDRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCDRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCDRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTeamSetUpCompletedEventHandler(object sender, GetTeamSetUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeamSetUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeamSetUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSecurityInfoCompletedEventHandler(object sender, GetSecurityInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExchangeRateCompletedEventHandler(object sender, GetExchangeRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountMasterWithServiceTypeInfoCompletedEventHandler(object sender, GetAccountMasterWithServiceTypeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountMasterWithServiceTypeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountMasterWithServiceTypeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountMasterWithCDSAccNoCompletedEventHandler(object sender, GetAccountMasterWithCDSAccNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountMasterWithCDSAccNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountMasterWithCDSAccNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountMasterWithAccTypeInfoCompletedEventHandler(object sender, GetAccountMasterWithAccTypeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountMasterWithAccTypeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountMasterWithAccTypeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccountMasterInfoCompletedEventHandler(object sender, GetAccountMasterInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountMasterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountMasterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCalendarInfoCompletedEventHandler(object sender, GetCalendarInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCalendarInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AccountNoCloseCompletedEventHandler(object sender, AccountNoCloseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountNoCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountNoCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLDPInfoCompletedEventHandler(object sender, GetLDPInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLDPInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLDPInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AccountMasterUpdateFSMSCompletedEventHandler(object sender, AccountMasterUpdateFSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountMasterUpdateFSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountMasterUpdateFSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AccountMasterInsertOnlineCompletedEventHandler(object sender, AccountMasterInsertOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountMasterInsertOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountMasterInsertOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAccServiceTypeCompletedEventHandler(object sender, GetAccServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLoginInfoCompletedEventHandler(object sender, GetLoginInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRegulationDetailsCompletedEventHandler(object sender, GetRegulationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegulationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegulationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMarketBrokerInsertUpdateDeleteCompletedEventHandler(object sender, GetMarketBrokerInsertUpdateDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarketBrokerInsertUpdateDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarketBrokerInsertUpdateDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetGlobalValuesInfoCompletedEventHandler(object sender, GetGlobalValuesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalValuesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalValuesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMarketBrokerInfoCompletedEventHandler(object sender, GetMarketBrokerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMarketBrokerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMarketBrokerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAeChannelHistoryCompletedEventHandler(object sender, GetAeChannelHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAeChannelHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAeChannelHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientGiroEpsDetailsCompletedEventHandler(object sender, GetClientGiroEpsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientGiroEpsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientGiroEpsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientCpfSrsDetailsCompletedEventHandler(object sender, GetClientCpfSrsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientCpfSrsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientCpfSrsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientClearingAgentDetailsCompletedEventHandler(object sender, GetClientClearingAgentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientClearingAgentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientClearingAgentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientDetailsCompletedEventHandler(object sender, GetClientDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AccountMasterInsertSBPCompletedEventHandler(object sender, AccountMasterInsertSBPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountMasterInsertSBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountMasterInsertSBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Webservice_DictionaryCompletedEventHandler(object sender, Webservice_DictionaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Webservice_DictionaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Webservice_DictionaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591